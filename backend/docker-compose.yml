services:
  database:
    image: postgis/postgis:latest
    restart: always
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 45s
      timeout: 15s
      retries: 3
  account:
    container_name: account
    build:
      context: ./account
    volumes:
      - ./account:/app
    ports:
      - "5000"
    environment:
      PORT: 5000
  ratings:
    container_name: ratings_reviews
    build:
      context: ./ratings_reviews
    volumes:
      - ./ratings_reviews:/app
    ports:
      - "5000"
    environment:
      PORT: 5000
  users:
    container_name: users
    build:
      context: ./users
    volumes:
      - ./users:/app
    ports:
      - "5000"
    environment:
      PORT: 5000
  messages:
    container_name: messages
    build:
      context: ./messages
    volumes:
      - ./messages:/app
    ports:
      - "5000"
    environment:
      PORT: 5000
  listing:
    container_name: listing
    build:
      context: ./listing
    volumes:
      - ./listing:/app
    ports:
      - ":5000:5000"
    environment:
      PORT: 5000
  recommendation:
    container_name: recommendation
    build:
      context: ./recommendation
    volumes:
      - ./recommendation:/app
    ports:
      - "5000"
    environment:
      PORT: 5000
  search:
    container_name: search
    build:
      context: ./search
    volumes:
      - ./search:/app
    ports:
      - "5000"
    environment:
      PORT: 5000
  data_layer:
    container_name: data_layer
    restart: on-failure
    build:
      context: ./data_layer
    depends_on:
      database:
        condition: service_started
    volumes:
      - ./data_layer:/app
    ports:
      - "5000"
    environment:
      PORT: 5000
  postal_code_script:
    container_name: postal_code_script
    build:
      context: ./data_layer
    volumes:
      - ./data_layer:/app
    ports:
      - "5000"
    environment:
      PORT: 5000
    depends_on:
      database:
        condition: service_healthy
    command: ["node", "populate_postal_codes.js"]
  nginx:
    container_name: nginx
    build: 
      context: ./nginx
    volumes:
      - ./nginx:/app
    ports:
      - 8080:8080
